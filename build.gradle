plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.github.node-gradle.node' version '3.1.0'
    id 'java'
    id 'war'
}

node {
    version = '16.10.0'
    npmVersion = '7.24.0'
    download = true
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir = file("${project.buildDir}/npm")
}

group = 'com.sjsy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
apply plugin: 'war'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

bootWar.enabled(false)
war.enabled(true)

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation 'commons-io:commons-io:2.11.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

//이미 빌드된 파일 삭제 1
task deleteVueArtifact(type: Delete) {
    delete "src/main/resources/static"
}

//npm install 2
task frontNpmInstall(type: NpmTask, dependsOn: ['deleteVueArtifact']) {
    workingDir = file("${project.projectDir}/frontend")
    args = ['install']
}

//npm run build --mode dev 3
task npmBuildBootRun(type: NpmTask) {
    workingDir = file("${project.projectDir}/frontend")
    args = ['run', 'bootrun']
}

//npm run build --mode war
task npmBuildWarFile(type: NpmTask) {
    workingDir = file("${project.projectDir}/frontend")
    args = ['run', 'deploy']
}

// copy war-last 3
task npmBuildDeploy(type: Copy, dependsOn: ['npmBuildWarFile']) {
    from("${project.projectDir}/src/main/resources/static/springboot-vuejs-board")
    into("${project.projectDir}/src/main/resources/static")
}

defaultTasks('clean')
processResources.dependsOn('frontNpmInstall', 'npmBuildBootRun')

war {
    processResources.dependsOn('npmBuildDeploy')
    archiveName("springboot-vuejs-board.war")
}

gradle.taskGraph.whenReady { taskGraph ->
    def tasks = taskGraph.allTasks

    //태스크 실행 그래프에 War 또는 Deploy 글자가 들어간 task 가 있으면
    if (tasks.find {it.name.contains("War") || it.name.contains("Deploy")}) {
        npmBuildBootRun.enabled = false // npmBuildBootRun 태스크 skip
    }
}

test {
    useJUnitPlatform()
}
